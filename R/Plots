#############
# Probelm 1 #
#############

load('countries.Rdata')

countries <- countries[complete.cases(countries),]
countries <- na.omit(countries)

# here, note that scale_x_continuous is how we get the log transformation into the
# x axis.  scale_x_continuous keeps track of transformation and allows us to "think"
# in the 'original' variable space, while displaying in the logged space.
baseplot <- ggplot(countries, aes(x=GDPperCapita, y=LifeExpectancy)) +
  xlab('GDP per Capita') +
  ylab('') + 
  labs(title='Life Expectancy') + #(shout out to Christine and Max)
  scale_x_continuous(trans='log', limits=c(500, 128000), breaks=c(500,1000,2000,4000,8000,16000,32000,64000,128000),labels=c(500,1000,2000,4000,8000,'16k','32k','64k','128k')) +
  scale_y_continuous(limits=c(20, 90), breaks=seq(20, 90, 10),labels=seq(20, 90, 10)) +
  theme_minimal()

# here in order to get the black border on the point, we change the point type to pch=21
# which is a fill-in-able circle.  We fill it in with the aesthetic fill.  The default
# points are solid, with no border
baseplot + 
  geom_point(aes(size=Population, fill=Region), pch=21, color='black', alpha=.8) +
  scale_size_area(guide=FALSE, max_size = 30) +
  scale_fill_brewer(palette = 'Paired')


#############
# Probelm 2 #
#############

salaries <- read_csv('Salaries.csv')
batting <- read_csv('Batting.csv')

inner_join(salaries, batting)

# filter years
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010)

# let's get rid of a bunch of variables
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G)

# calculate salary per game
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G)
# notice here each year for each player (etc) has a salary per game.
# each player has (possibly) multiple years
# can calculate a median salary/G per player (across years)

# group by playerID and teamID (takes care of multiple teams)
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID)

# calculate median per player per team
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID) %>%
  summarize(median=median(salaryPerGame))
#note that now years are gone (we aggreagated them out through
#the median).  Players have multiple teams, though

# First attemp at calculating the per-team mean of the medians
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID) %>%
  summarize(median=median(salaryPerGame)) %>%
  summarize(mean=mean(median))
#but this didn't do what we wanted!  It aggregated over teams
#we want to aggregate over players

# second attempt: first specify group_by(teamID) so now the
# grouping over playerID is broken
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID) %>%
  summarize(median=median(salaryPerGame)) %>%
  group_by(teamID) %>%
  summarize(mean=mean(median))
#this does what we want


# plot it
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010) %>%
  select(yearID, teamID, playerID, salary, G) %>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID) %>%
  summarize(median=median(salaryPerGame)) %>%
  group_by(teamID) %>%
  summarize(mean=mean(median)) %>%
  ggplot() +
  geom_bar(stat="identity", aes(x=teamID, y=mean))

# plot it, ordered, with colors by league! (notice how we had to incorporate lgID)
inner_join(salaries, batting) %>%
  filter(yearID >=2000 & yearID <= 2010)%>%
  select(yearID, teamID, lgID, playerID, salary, G)%>%
  mutate(salaryPerGame=salary/G) %>%
  group_by(playerID, teamID, lgID) %>%
  summarize(median=median(salaryPerGame)) %>%
  group_by(teamID, lgID) %>%
  summarize(mean=mean(median))%>%
  ggplot() +
  geom_bar(stat="identity", aes(x=reorder(teamID, -mean), y=mean, fill=lgID))

#############
# Probelm 3 #
#############

library(tidyverse)

usercuisine <- read.csv("usercuisine.csv")
userprofile <- read.csv("userprofile.csv")
chefmozcuisine <- read.csv("chefmozcuisine.csv")
rating <- read.csv("rating_final.csv")


# (a)

# Visualization #1
rating %>%
  inner_join(chefmozcuisine, by='placeID') %>%
  inner_join(usercuisine, by='userID') %>%
  mutate(matchcuisine = ifelse(as.character(Rcuisine.x)
                               == as.character(Rcuisine.y), "Preferred", "Non-preferred")) %>%
  group_by(matchcuisine) %>%
  summarize(avgrating  = mean(rating)) %>%
  ggplot(aes(fill=matchcuisine)) +
  geom_bar(stat="identity", aes(x=matchcuisine, y=avgrating)) +
  labs(title="Restaurant Ratings by Preferred vs Non-preferred Cuisine") +
  xlab("Preference") +
  ylab("Average Rating") +
  theme(legend.position="none")

# Visualiation #2-a
rating %>%
  inner_join(chefmozcuisine, by='placeID') %>%
  inner_join(usercuisine, by='userID') %>%
  mutate(matchcuisine = ifelse(as.character(Rcuisine.x)
                               == as.character(Rcuisine.y), "Preferred", "Non-preferred")) %>%
  group_by(matchcuisine, rating) %>%
  ggplot(aes(x=rating)) +
  geom_bar(aes(fill=matchcuisine), position="dodge") +
  labs(title="Restaurant Ratings by Preferred vs Non-preferred Cuisine") +
  xlab("Rating") +
  ylab("Count") +
  labs(fill='Cuisine Preference') 

# Visualization #2-b
rating %>%
  inner_join(chefmozcuisine, by='placeID') %>%
  inner_join(usercuisine, by='userID') %>%
  mutate(matchcuisine = ifelse(as.character(Rcuisine.x)
                               == as.character(Rcuisine.y), "Preferred", "Non-preferred")) %>%
  group_by(matchcuisine, rating) %>%
  ggplot(aes(x=rating)) +
  geom_bar(aes(fill=matchcuisine), position="fill") +
  labs(title="Restaurant Ratings by Preferred vs Non-preferred Cuisine") +
  xlab("Rating") +
  ylab("Count") +
  labs(fill='Cuisine Preference')


# The bar chart in visualizatoin #1 clearly shows that people gave higher
# average rating to the restaurants that served their preferred cuisine
# than non-preferred cuisine. However, this graph doesn't give us any
# information about the distribution and the total number of ratings
# in each category.

# The bar chart in visualization #2-a displays the distribution as well as
# the total number of ratings in each category. However, because of the high
# number of non-preferred cuisine ratings, the distribution of preferred
# cuisine ratings is overshadowed. In order to correct this, I transformed
# the graph into stacked bars that shows the relative distribution. We now
# lost the information about the the total number of non-preferred
# and preferred ratings, but we can now see the proportion of
# non-preferred and preferred in each category. We can now see that people gave
# more 2s and 1s for the restaurants which served their preferred cuisine
# than those that served cuisine they did not prefer.

# Overall, even though the visualization #2-b gives us more information
# about the distribution of the ratings, this doesn't greatly improve
# our understanding of the data, as the distributions of the ratings don't
# give us any new insight about the data. Visualization #1 is simpler
# and more clearly illustrates the difference between the average ratings
# of non-preferred and preferred ratings. Therefore, I would choose
# visualization #1.


# (b)

# I wanted to see the cuisines preferred by overweight individuals.

# Visualization #1

# I made a new variable that calculates the BMI score of individuals
# using their weight and heights. Then I filtered out the preferred cuisines
# of the individuals with BMI score greater than 27, which is the
# cut-off overweight BMI score. I filtered out the cuisines preferred by only
# one individual, as it is both insignificant and its large number rendered
# the graph unreadable.

userprofile %>%
  inner_join(usercuisine, by='userID') %>%
  mutate(BMI = (weight / (height**2))) %>%  # BMI
  filter(BMI > 27) %>%
  group_by(Rcuisine) %>%
  mutate(count = n()) %>%
  filter(count>1) %>%  # Filtered cuisines preferred by 1 person
  ggplot(aes(x=factor(Rcuisine))) +
  geom_bar(aes(fill=Rcuisine)) +
  labs(title="Preferred cuisines of overweight individuals") +
  xlab("Cuisines") +
  ylab("Count") +
  theme(legend.position="none")


# The bar chart in visualization #1 clearly shows that Mexican cuisine
# dominates the preferred cuisines among the overweight individuals.
# However, from this graph, it is unlcear whether the overweight individuals
# greatly prefer Mexican cusine over others, or if this pattern is
# replicated in the general population. In other words, it may be just that
# many people in the rest of the individuals also like Mexican cuisine.


# Visualization #2-a

# I took the preferred cuisines of overweight individuals, and looked at
# the proportion of overweight individuals who preferred those cuisines
# compared to people who are not overweight.

userprofile %>%
  inner_join(usercuisine, by='userID') %>%
  filter(Rcuisine %in% c("Afghan", "American", "Burgers", "Chinese", "Japanese",
                         "Latin-America", "Mexican", "Pizzeria", "Regional")) %>%
  mutate(BMI = (weight / (height**2))) %>%
  mutate(overweight = ifelse(BMI>27, "Yes", "No")) %>%
  group_by(Rcuisine, overweight) %>%
  ggplot(aes(x=Rcuisine)) +
  geom_bar(aes(fill=overweight), position="fill") +
  labs(title="Overweight vs. non-overweight individuals' preference of
       Cuisines preferred by overweight individuals") +
  xlab("Cuisines") +
  ylab("Proportion")

# In this graph, we can see that Mexican food is not any more preferred
# by the overweight individuals compared to other cuisines. It actually
# had the second lowest proportion of overweight individuals.
# Instead, in this graph, Afghan and regional cuisine had the highest
# preferrences by overweight individuals. Does this mean that overweight
# individuals prefer Afghan and Regional cuisines?


# Visualization #2-b

userprofile %>%
  inner_join(usercuisine, by='userID') %>%
  filter(Rcuisine %in% c("Afghan", "American", "Burgers", "Chinese", "Japanese",
                         "Latin-America", "Mexican", "Pizzeria", "Regional")) %>%
  mutate(BMI = (weight / (height**2))) %>%
  mutate(overweight = ifelse(BMI>27, "Yes", "No")) %>%
  group_by(Rcuisine, overweight) %>%
  ggplot(aes(x=Rcuisine)) +
  geom_bar(aes(fill=overweight)) +
  labs(title="Overweight vs. non-overweight individuals' preference of
       Cuisines preferred by overweight individuals") +
  xlab("Cuisines") +
  ylab("Count")


# This graph shows the actual number of overweight and non-overweight individuals
# who preferred most preferred cuisines of overweight individuals. The total number
# of people who said they preferred Afghan and Regional cuisines are only
# around 5 each. Therefore, it is not reasonable to conclude that Afghan
# and Regional cuisines were more preferred by overweight individuals based on
# such small sample sizes.

# Visualization #2-b both show the total number of people who preferred the cuisines,
# as well as the relative number of overweight and non-overweight individuals
# who preferred those cuisines. However, the high number of Mexican food overshadows
# the bars of other cuisines and makes the judgment a bit difficult:
# (1) It is hard to compare the number of overweight vs. non-overweight individuals
# for non-Mexican cuisines because the bars are too short,
# (2) it is also hard to compare the relative number of overweight individuals
# who preferred Mexican cuisine with that of other cuisines because of the
# difference in scale. Indeed, it's not very clear from this graph if the number
# of overweight individuals who preferred Mexican food is smaller or greater compared
# to others. Plus, without taking a closer look, it is still easy for
# one to jump to conclusion that Mexican food is preferred by overweight individuals
# because it is such a striking feature of the graph.

# In conclusion, I would choose to display visualization #1 and #2-a at the same
# time. They go hand-in-hand to give a bigger picture of the data, and compliment
# each other's weakness. This way, the graphs are less likely to convey
# misleading information that overweight individuals had strong preferrence for
# certain cuisines (Mexican in #1, Afghan and Regional in #2-a.) From these two
# graphs, the reader can see that Mexican food is generally preferred by
# the whole population, both overweight and non-overweight.
